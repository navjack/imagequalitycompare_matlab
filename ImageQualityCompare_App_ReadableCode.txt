classdef ImageQualityCompare_app < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        ImageQualityCompare  matlab.ui.Figure
        GridLayout           matlab.ui.container.GridLayout
        LeftPanel            matlab.ui.container.Panel
        ComputeButton        matlab.ui.control.Button
        DiffImage            matlab.ui.control.Image
        TextArea             matlab.ui.control.TextArea
        CenterPanel          matlab.ui.container.Panel
        RefImageDisp         matlab.ui.control.Image
        RefLabel             matlab.ui.control.Label
        OpenRef              matlab.ui.control.Button
        ReferenceImageLabel  matlab.ui.control.Label
        RefImageDir          matlab.ui.control.Label
        RightPanel           matlab.ui.container.Panel
        CompImageDisp        matlab.ui.control.Image
        CompLabel            matlab.ui.control.Label
        OpenComp             matlab.ui.control.Button
        CompareImageLabel    matlab.ui.control.Label
        CompImageDir         matlab.ui.control.Label
    end

    % Properties that correspond to apps with auto-reflow
    properties (Access = private)
        onePanelWidth = 576;
        twoPanelWidth = 768;
    end

    
    properties (Access = public)
        refpath % Description
        ref % Description
        refinfo % Description
        refsize % Description
        compinfo % Description
        comp % Description
        comppath % Description
        compname % Description
        compsize % Description
        diffsize % Description
        ssimval % Description
        ssimmap % Description
        peaksnr % Description
        snr % Description
        err % Description
    end
    

    % Callbacks that handle component events
    methods (Access = private)

        % Changes arrangement of the app based on UIFigure width
        function updateAppLayout(app, event)
            currentFigureWidth = app.ImageQualityCompare.Position(3);
            if(currentFigureWidth <= app.onePanelWidth)
                % Change to a 3x1 grid
                app.GridLayout.RowHeight = {422, 422, 422};
                app.GridLayout.ColumnWidth = {'1x'};
                app.CenterPanel.Layout.Row = 1;
                app.CenterPanel.Layout.Column = 1;
                app.LeftPanel.Layout.Row = 2;
                app.LeftPanel.Layout.Column = 1;
                app.RightPanel.Layout.Row = 3;
                app.RightPanel.Layout.Column = 1;
            elseif (currentFigureWidth > app.onePanelWidth && currentFigureWidth <= app.twoPanelWidth)
                % Change to a 2x2 grid
                app.GridLayout.RowHeight = {422, 422};
                app.GridLayout.ColumnWidth = {'1x', '1x'};
                app.CenterPanel.Layout.Row = 1;
                app.CenterPanel.Layout.Column = [1,2];
                app.LeftPanel.Layout.Row = 2;
                app.LeftPanel.Layout.Column = 1;
                app.RightPanel.Layout.Row = 2;
                app.RightPanel.Layout.Column = 2;
            else
                % Change to a 1x3 grid
                app.GridLayout.RowHeight = {'1x'};
                app.GridLayout.ColumnWidth = {218, '1x', 320};
                app.LeftPanel.Layout.Row = 1;
                app.LeftPanel.Layout.Column = 1;
                app.CenterPanel.Layout.Row = 1;
                app.CenterPanel.Layout.Column = 2;
                app.RightPanel.Layout.Row = 1;
                app.RightPanel.Layout.Column = 3;
            end
        end

        % Button pushed function: OpenRef
        function OpenRefButtonPushed(app, event)
            [file,path] = uigetfile('*.png;*.tif;*.tiff;*.jpg;*.jpeg;*.jp2;*.ico;*.gif;*.bmp;*.cur;*.hdf4;*.pcx;*.pgm;*.ppm;*.ras;*.xwd',"Pick a Reference Picture");
            app.refpath = fullfile(path,file);
            app.ref = imread(app.refpath);
%                if isfolder("C:\Temp\ImageQualityCompare\")
%                    copyfile (app.refpath, "C:\Temp\ImageQualityCompare\ref");
%                else
%                    mkdir("C:\Temp\ImageQualityCompare");
%                    copyfile (app.refpath, "C:\Temp\ImageQualityCompare\ref");
%                end
            app.refinfo = imfinfo(app.refpath);
            app.refsize = app.refinfo.FileSize;
            app.RefImageDir.Text = app.refpath;
            app.RefImageDisp.ImageSource = app.refpath;
            app.RefLabel.Text = app.refpath;
        end

        % Button pushed function: OpenComp
        function OpenCompButtonPushed(app, event)
            [file,path] = uigetfile('*.png;*.tif;*.tiff;*.jpg;*.jpeg;*.jp2;*.ico;*.gif;*.bmp;*.cur;*.hdf4;*.pcx;*.pgm;*.ppm;*.ras;*.xwd',"Pick a Compressed Picture");
            app.comppath = fullfile(path,file);
            app.comp = imread(app.comppath);
%                if isfolder("C:\Temp\ImageQualityCompare\")
%                    copyfile (app.comppath, "C:\Temp\ImageQualityCompare\comp");
%                else
%                    mkdir("C:\Temp\ImageQualityCompare");
%                    copyfile (app.comppath, "C:\Temp\ImageQualityCompare\comp");
%                end
            app.compinfo = imfinfo(app.comppath);
            app.compsize = app.compinfo.FileSize;
            app.compname = file;
            app.diffsize = app.refsize - app.compsize;
            app.CompImageDir.Text = app.comppath;
            app.CompImageDisp.ImageSource = app.comppath;
            app.CompLabel.Text = app.comppath;
        end

        % Button pushed function: ComputeButton
        function ComputeButtonPushed(app, event)
            % This just initializes some variables or some shit
            [app.ssimval, app.ssimmap] = ssim(app.comp,app.ref);
            [app.peaksnr, app.snr] = psnr(app.comp, app.ref);
            app.err = immse(app.comp, app.ref);
            app.DiffImage.ImageSource = app.ssimmap;
%            app.Results.Value = {'The Peak-SNR value is:		%0.4fdB Higher is better', app.peaksnr; 'The SNR value is:		%0.4fdB Higher is better', app.snr; 'The SSIM value is:		%0.4f   Higher is better', app.ssimval; 'The MSE value is:		%0.4f    Lower Is Better', app.err; 'Original File Size:		%4.0f bytes', app.refsize; 'Compressed File Size:		%4.0f bytes', app.compsize; 'Size Difference:		%4.0f bytes' app.diffsize};
            cellArrayText{1} = sprintf('The Peak-SNR value is: %0.2fdB',app.peaksnr);
            cellArrayText{2} = sprintf('The SNR value is: %0.2fdB',app.snr);
            cellArrayText{3} = sprintf('The SSIM value is: %0.2f',app.ssimval);
            cellArrayText{4} = sprintf('The MSE value is: %0.2f',app.err);
            cellArrayText{5} = sprintf('Original File Size: %0.0fB',app.refsize);
            cellArrayText{6} = sprintf('Compressed File Size: %0.0fB',app.compsize);
            cellArrayText{7} = sprintf('Size Difference: %0.0fB',app.diffsize);
            app.TextArea.Value = cellArrayText;
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create ImageQualityCompare and hide until all components are created
            app.ImageQualityCompare = uifigure('Visible', 'off');
            app.ImageQualityCompare.AutoResizeChildren = 'off';
            app.ImageQualityCompare.Position = [100 100 858 422];
            app.ImageQualityCompare.Name = 'Image Quality Compare';
            app.ImageQualityCompare.Resize = 'off';
            app.ImageQualityCompare.SizeChangedFcn = createCallbackFcn(app, @updateAppLayout, true);

            % Create GridLayout
            app.GridLayout = uigridlayout(app.ImageQualityCompare);
            app.GridLayout.ColumnWidth = {218, '1x', 320};
            app.GridLayout.RowHeight = {'1x'};
            app.GridLayout.ColumnSpacing = 0;
            app.GridLayout.RowSpacing = 0;
            app.GridLayout.Padding = [0 0 0 0];
            app.GridLayout.Scrollable = 'on';

            % Create LeftPanel
            app.LeftPanel = uipanel(app.GridLayout);
            app.LeftPanel.Layout.Row = 1;
            app.LeftPanel.Layout.Column = 1;

            % Create ComputeButton
            app.ComputeButton = uibutton(app.LeftPanel, 'push');
            app.ComputeButton.ButtonPushedFcn = createCallbackFcn(app, @ComputeButtonPushed, true);
            app.ComputeButton.Position = [61 161 100 22];
            app.ComputeButton.Text = 'Compute';

            % Create DiffImage
            app.DiffImage = uiimage(app.LeftPanel);
            app.DiffImage.Position = [6 193 206 210];
            app.DiffImage.ImageSource = 'dot.png';

            % Create TextArea
            app.TextArea = uitextarea(app.LeftPanel);
            app.TextArea.Position = [6 13 206 140];

            % Create CenterPanel
            app.CenterPanel = uipanel(app.GridLayout);
            app.CenterPanel.Layout.Row = 1;
            app.CenterPanel.Layout.Column = 2;

            % Create RefImageDisp
            app.RefImageDisp = uiimage(app.CenterPanel);
            app.RefImageDisp.Position = [6 91 308 310];
            app.RefImageDisp.ImageSource = 'dot.png';

            % Create RefLabel
            app.RefLabel = uilabel(app.CenterPanel);
            app.RefLabel.Position = [6 399 308 22];
            app.RefLabel.Text = '';

            % Create OpenRef
            app.OpenRef = uibutton(app.CenterPanel, 'push');
            app.OpenRef.ButtonPushedFcn = createCallbackFcn(app, @OpenRefButtonPushed, true);
            app.OpenRef.Position = [113 19 100 22];
            app.OpenRef.Text = 'Open';

            % Create ReferenceImageLabel
            app.ReferenceImageLabel = uilabel(app.CenterPanel);
            app.ReferenceImageLabel.HorizontalAlignment = 'center';
            app.ReferenceImageLabel.Position = [113 69 98 22];
            app.ReferenceImageLabel.Text = 'Reference Image';

            % Create RefImageDir
            app.RefImageDir = uilabel(app.CenterPanel);
            app.RefImageDir.Position = [58 50 207 22];
            app.RefImageDir.Text = '';

            % Create RightPanel
            app.RightPanel = uipanel(app.GridLayout);
            app.RightPanel.Layout.Row = 1;
            app.RightPanel.Layout.Column = 3;

            % Create CompImageDisp
            app.CompImageDisp = uiimage(app.RightPanel);
            app.CompImageDisp.Position = [6 91 308 310];
            app.CompImageDisp.ImageSource = 'dot.png';

            % Create CompLabel
            app.CompLabel = uilabel(app.RightPanel);
            app.CompLabel.Position = [6 399 308 22];
            app.CompLabel.Text = '';

            % Create OpenComp
            app.OpenComp = uibutton(app.RightPanel, 'push');
            app.OpenComp.ButtonPushedFcn = createCallbackFcn(app, @OpenCompButtonPushed, true);
            app.OpenComp.Position = [113 19 100 22];
            app.OpenComp.Text = 'Open';

            % Create CompareImageLabel
            app.CompareImageLabel = uilabel(app.RightPanel);
            app.CompareImageLabel.HorizontalAlignment = 'center';
            app.CompareImageLabel.Position = [113 69 92 22];
            app.CompareImageLabel.Text = 'Compare Image';

            % Create CompImageDir
            app.CompImageDir = uilabel(app.RightPanel);
            app.CompImageDir.Position = [58 50 207 22];
            app.CompImageDir.Text = '';

            % Show the figure after all components are created
            app.ImageQualityCompare.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = ImageQualityCompare_app

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.ImageQualityCompare)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.ImageQualityCompare)
        end
    end
end
